

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 22 21:05:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16LF877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  000B                     _INTCONbits	set	11
   167  0008                     _PORTD	set	8
   168  0040                     _RD0	set	64
   169  0081                     _OPTION_REGbits	set	129
   170  0086                     _TRISBbits	set	134
   171  0088                     _TRISD	set	136
   172                           
   173                           	psect	cinit
   174  000F                     start_initialization:	
   175                           ; #config settings
   176                           
   177  000F                     __initialization:
   178  000F                     end_of_initialization:	
   179                           ;End of C runtime variable initialization code
   180                           
   181  000F                     __end_of__initialization:
   182  000F  0183               	clrf	3
   183  0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   184                           
   185                           	psect	cstackCOMMON
   186  0070                     __pcstackCOMMON:
   187  0070                     ?_main:
   188  0070                     ?_ISR:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0070                     ??_ISR:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196  0070                     	ds	2
   197  0072                     ??_main:
   198                           
   199                           	psect	maintext
   200  0013                     __pmaintext:	
   201                           ; 1 bytes @ 0x2
   202 ;;
   203 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   204 ;;
   205 ;; *************** function _main *****************
   206 ;; Defined at:
   207 ;;		line 11 in file "main.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;		None
   210 ;; Auto vars:     Size  Location     Type
   211 ;;		None
   212 ;; Return value:  Size  Location     Type
   213 ;;                  1    wreg      void 
   214 ;; Registers used:
   215 ;;		wreg, status,2
   216 ;; Tracked objects:
   217 ;;		On entry : B00/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   221 ;;      Params:         0       0       0       0       0
   222 ;;      Locals:         0       0       0       0       0
   223 ;;      Temps:          0       0       0       0       0
   224 ;;      Totals:         0       0       0       0       0
   225 ;;Total ram usage:        0 bytes
   226 ;; Hardware stack levels required when called: 1
   227 ;; This function calls:
   228 ;;		Nothing
   229 ;; This function is called by:
   230 ;;		Startup code after reset
   231 ;; This function uses a non-reentrant model
   232 ;;
   233                           
   234                           
   235                           ;psect for function _main
   236  0013                     _main:
   237  0013                     l618:	
   238                           ;incstack = 0
   239                           ; Regs used in _main: [wreg+status,2]
   240                           
   241                           
   242                           ;main.c: 12:     TRISD = 0;
   243  0013  1683               	bsf	3,5	;RP0=1, select bank1
   244  0014  1303               	bcf	3,6	;RP1=0, select bank1
   245  0015  0188               	clrf	8	;volatile
   246  0016                     l620:
   247                           
   248                           ;main.c: 13:     TRISBbits.TRISB0 = 1;
   249  0016  1406               	bsf	6,0	;volatile
   250  0017                     l622:
   251                           
   252                           ;main.c: 14:     PORTD = 1;
   253  0017  3001               	movlw	1
   254  0018  1283               	bcf	3,5	;RP0=0, select bank0
   255  0019  1303               	bcf	3,6	;RP1=0, select bank0
   256  001A  0088               	movwf	8	;volatile
   257  001B                     l624:
   258                           
   259                           ;main.c: 15:     INTCONbits.GIE = 1;
   260  001B  178B               	bsf	11,7	;volatile
   261  001C                     l626:
   262                           
   263                           ;main.c: 16:     INTCONbits.INTE = 1;
   264  001C  160B               	bsf	11,4	;volatile
   265  001D                     l628:
   266                           
   267                           ;main.c: 17:     OPTION_REGbits.INTEDG = 1;
   268  001D  1683               	bsf	3,5	;RP0=1, select bank1
   269  001E  1303               	bcf	3,6	;RP1=0, select bank1
   270  001F  1701               	bsf	1,6	;volatile
   271  0020                     l630:
   272                           
   273                           ;main.c: 18:     INTCONbits.INTF = 0;
   274  0020  108B               	bcf	11,1	;volatile
   275  0021                     l17:	
   276                           ;main.c: 21:     while(1){
   277                           
   278  0021                     l18:	
   279                           ;main.c: 23:     }
   280                           
   281  0021  2821               	goto	l17
   282  0022  120A  118A  280C   	ljmp	start
   283  0025                     __end_of_main:
   284                           
   285                           	psect	text1
   286  0025                     __ptext1:	
   287 ;; *************** function _ISR *****************
   288 ;; Defined at:
   289 ;;		line 28 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          2       0       0       0       0
   306 ;;      Totals:         2       0       0       0       0
   307 ;;Total ram usage:        2 bytes
   308 ;; Hardware stack levels used: 1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		Interrupt level 1
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           
   317                           ;psect for function _ISR
   318  0025                     _ISR:
   319  0025                     i1l632:
   320                           
   321                           ;main.c: 29:     if(INTCONbits.INTF == 1){
   322  0025  1C8B               	btfss	11,1	;volatile
   323  0026  2828               	goto	u1_21
   324  0027  2829               	goto	u1_20
   325  0028                     u1_21:
   326  0028  282E               	goto	i1l26
   327  0029                     u1_20:
   328  0029                     i1l634:
   329                           
   330                           ;main.c: 30:         RD0 = !RD0;
   331  0029  3001               	movlw	1
   332  002A  1283               	bcf	3,5	;RP0=0, select bank0
   333  002B  1303               	bcf	3,6	;RP1=0, select bank0
   334  002C  0688               	xorwf	8,f
   335  002D                     i1l636:
   336                           
   337                           ;main.c: 31:         INTCONbits.INTF = 0;
   338  002D  108B               	bcf	11,1	;volatile
   339  002E                     i1l26:
   340  002E  0871               	movf	??_ISR+1,w
   341  002F  008A               	movwf	10
   342  0030  0E70               	swapf	??_ISR,w
   343  0031  0083               	movwf	3
   344  0032  0EFE               	swapf	btemp,f
   345  0033  0E7E               	swapf	btemp,w
   346  0034  0009               	retfie
   347  0035                     __end_of_ISR:
   348  007E                     btemp	set	126	;btemp
   349  007E                     wtemp0	set	126
   350                           
   351                           	psect	intentry
   352  0004                     __pintentry:	
   353                           ;incstack = 0
   354                           ; Regs used in _ISR: [wreg]
   355                           
   356  0004                     interrupt_function:
   357  007E                     saved_w	set	btemp
   358  0004  00FE               	movwf	btemp
   359  0005  0E03               	swapf	3,w
   360  0006  00F0               	movwf	??_ISR
   361  0007  080A               	movf	10,w
   362  0008  00F1               	movwf	??_ISR+1
   363  0009  120A  118A  2825   	ljmp	_ISR
   364                           
   365                           	psect	config
   366                           
   367                           ;Config register CONFIG @ 0x2007
   368                           ;	Oscillator Selection bits
   369                           ;	FOSC = HS, HS oscillator
   370                           ;	Watchdog Timer Enable bit
   371                           ;	WDTE = ON, WDT enabled
   372                           ;	Power-up Timer Enable bit
   373                           ;	PWRTE = OFF, PWRT disabled
   374                           ;	Brown-out Reset Enable bit
   375                           ;	BOREN = ON, BOR enabled
   376                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   377                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   378                           ;	Data EEPROM Memory Code Protection bit
   379                           ;	CPD = OFF, Data EEPROM code protection off
   380                           ;	Flash Program Memory Write Enable bits
   381                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   382                           ;	In-Circuit Debugger Mode bit
   383                           ;	DEBUG = 0x1, unprogrammed default
   384                           ;	Flash Program Memory Code Protection bit
   385                           ;	CP = OFF, Code protection off
   386  2007                     	org	8199
   387  2007  3FFE               	dw	16382

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 22 21:05:23 2021

                     l17 0021                       l18 0021                      l620 0016  
                    l630 0020                      l622 0017                      l624 001B  
                    l626 001C                      l618 0013                      l628 001D  
                    _RD0 0040                      _ISR 0025                     ?_ISR 0070  
                   i1l26 002E                     u1_20 0029                     u1_21 0028  
                   _main 0013                     btemp 007E                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    i1l632 0025  
                  i1l634 0029                    i1l636 002D                    _PORTD 0008  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0025  
                 ??_main 0072                   saved_w 007E  __end_of__initialization 000F  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 0013  
             __pintentry 0004                  __ptext1 0025             __size_of_ISR 0010  
   end_of_initialization 000F                _TRISBbits 0086      start_initialization 000F  
            __end_of_ISR 0035                ___latbits 0002        interrupt_function 0004  
          __size_of_main 0012               _INTCONbits 000B                 intlevel1 0000  
